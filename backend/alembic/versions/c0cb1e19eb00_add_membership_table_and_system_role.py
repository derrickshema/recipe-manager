"""add membership table and system_role

Revision ID: c0cb1e19eb00
Revises: 
Create Date: 2025-10-01 15:51:23.195570

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c0cb1e19eb00'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('membership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('RESTAURANT_ADMIN', 'EMPLOYEE', 'VIEWER', name='orgrole'), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('recipe')
    op.add_column('user', sa.Column('system_role', sa.Enum('SUPERADMIN', 'USER', 'SUSPENDED', name='systemrole'), nullable=False))
    op.drop_column('user', 'role')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('role', postgresql.ENUM('ADMIN', 'EDITOR', 'VIEWER', name='role'), autoincrement=False, nullable=False))
    op.drop_column('user', 'system_role')
    op.create_table('recipe',
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ingredients', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('instructions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('prep_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cook_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('servings', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('restaurant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], name=op.f('recipe_restaurant_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('recipe_pkey'))
    )
    op.drop_table('membership')
    # ### end Alembic commands ###
