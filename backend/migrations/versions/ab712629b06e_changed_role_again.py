"""changed role again

Revision ID: ab712629b06e
Revises: 83cd928ec422
Create Date: 2025-10-05 08:13:10.427950

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ab712629b06e'
down_revision: Union[str, Sequence[str], None] = '83cd928ec422'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe')
    op.add_column('user', sa.Column('role', sa.Enum('SUPERADMIN', 'USER', 'SUSPENDED', name='system_role'), nullable=True))
    op.drop_column('user', 'system_role')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('system_role', postgresql.ENUM('SUPERADMIN', 'USER', 'SUSPENDED', name='system_role'), autoincrement=False, nullable=True))
    op.drop_column('user', 'role')
    op.create_table('recipe',
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ingredients', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('instructions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('prep_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cook_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('servings', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('restaurant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], name=op.f('recipe_restaurant_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('recipe_pkey'))
    )
    # ### end Alembic commands ###
